// @flow
import * as I from 'immutable'
import * as RPCTypes from './rpc-gen'
import * as Devices from './devices'
import {type IconType} from '../../common-adapters/icon'
import {type TextType} from '../../common-adapters/text'
import {isWindows} from '../platform'

export opaque type Path = ?string

export type PathType = 'folder' | 'file' | 'symlink' | 'unknown'
export type ProgressType = 'favorite' | 'pending' | 'loaded'

export type Device = {
  type: Devices.DeviceType,
  name: string,
  deviceID: string,
}

export type ParticipantUnlock = {
  name: string,
  devices: string,
}

export type FavoriteMetadata = {
  folderType: RPCTypes.FolderType,
  isIgnored: boolean,
  isNew: boolean,
  needsRekey: boolean,
  waitingForParticipantUnlock?: Array<ParticipantUnlock>,
  youCanUnlock?: Array<Device>,
}

export type _FavoriteItem = {
  badgeCount: number,
  name: string,
  tlfMeta?: FavoriteMetadata,
  favoriteChildren?: I.Set<string>,
}

export type FavoriteItem = I.RecordOf<_FavoriteItem>

export type PathItemMetadata = {
  name: string,
  lastModifiedTimestamp: number,
  lastWriter: RPCTypes.User,
  size: number,
  progress: ProgressType,
  badgeCount: number,
  tlfMeta?: FavoriteMetadata,
}

export type _FolderPathItem = {
  type: 'folder',
  children: I.Set<string>,
  favoriteChildren: I.Set<string>,
} & PathItemMetadata
export type FolderPathItem = I.RecordOf<_FolderPathItem>

export type _SymlinkPathItem = {
  type: 'symlink',
  linkTarget: Path,
} & PathItemMetadata
export type SymlinkPathItem = I.RecordOf<_SymlinkPathItem>

export type _FilePathItem = {
  type: 'file',
} & PathItemMetadata
export type FilePathItem = I.RecordOf<_FilePathItem>

export type _UnknownPathItem = {
  type: 'unknown',
} & PathItemMetadata
export type UnknownPathItem = I.RecordOf<_UnknownPathItem>

export type PathItem = FolderPathItem | SymlinkPathItem | FilePathItem | UnknownPathItem

export type SortBy = 'name' | 'time'
export type SortOrder = 'asc' | 'desc'
export type _SortSetting = {
  sortBy: SortBy,
  sortOrder: SortOrder,
}
export type SortSetting = I.RecordOf<_SortSetting>

export type _PathUserSetting = {
  sort: SortSetting,
}
export type PathUserSetting = I.RecordOf<_PathUserSetting>

export type LocalPath = string

export type TransferType = 'upload' | 'download'
export type transferIntentMobile = 'camera-roll' | 'share'
export type transferIntentWebview = 'web-view-text' | 'web-view'
export type TransferIntent = 'none' | transferIntentMobile | transferIntentWebview

export type _TransferMeta = {
  type: TransferType,
  entryType: PathType,
  intent: TransferIntent,
  path: Path,
  localPath: LocalPath,
  opID: RPCTypes.OpID,
}
export type TransferMeta = I.RecordOf<_TransferMeta>

export type _TransferState = {
  completePortion: number,
  endEstimate?: number,
  error?: string,
  isDone: boolean,
  startedAt: number,
}
export type TransferState = I.RecordOf<_TransferState>

export type _Transfer = {
  meta: TransferMeta,
  state: TransferState,
}
export type Transfer = I.RecordOf<_Transfer>

export type PathBreadcrumbItem = {
  isTlfNameItem: boolean,
  isLastItem: boolean,
  name: string,
  path: Path,
  onOpenBreadcrumb: (evt?: SyntheticEvent<>) => void,
}

export type _Flags = {
  kbfsOpening: boolean,
  kbfsInstalling: boolean,
  fuseInstalling: boolean,
  kextPermissionError: boolean,
  securityPrefsPropmted: boolean,
  showBanner: boolean,
  syncing: boolean,
}

export type Flags = I.RecordOf<_Flags>

export type _State = {
  pathItems: I.Map<Path, PathItem>,
  pathUserSettings: I.Map<Path, PathUserSetting>,
  loadingPaths: I.Set<Path>,
  transfers: I.Map<string, Transfer>,
  fuseStatus: ?RPCTypes.FuseStatus,
  flags: Flags,
}
export type State = I.RecordOf<_State>

export type Visibility = 'private' | 'public' | 'team' | null

export const stringToPath = (s: string): Path => (s.indexOf('/') === 0 ? s : null)
export const pathToString = (p: Path): string => (!p ? '' : p)
// export const stringToLocalPath = (s: string): LocalPath => s
// export const localPathToString = (p: LocalPath): string => p
export const getPathName = (p: Path): string => (!p ? '' : p.split('/').pop())
export const getPathParent = (p: Path): Path =>
  !p
    ? ''
    : p
        .split('/')
        .slice(0, -1)
        .join('/')
export const getPathElements = (p: Path): Array<string> => (!p ? [] : p.split('/').slice(1))
export const getVisibilityFromElems = (elems: Array<string>) => {
  if (elems.length < 2 || !elems[1]) return null
  const visibility = elems[1]
  switch (visibility) {
    case 'private':
    case 'public':
    case 'team':
      return visibility
    default:
      // We don't do a flow check here because by now flow knows that we can't
      // be an empty string, so asserting empty will always fail.
      return null
  }
}
export const getPathVisibility = (p: Path): Visibility => {
  const elems = getPathElements(p)
  return getVisibilityFromElems(elems)
}
export const stringToPathType = (s: string): PathType => {
  switch (s) {
    case 'folder':
    case 'file':
    case 'symlink':
    case 'unknown':
      return s
    default:
      // We don't do a flow check here because by now flow knows that we can't
      // be an empty string, so asserting empty will always fail.
      throw new Error('Invalid path type')
  }
}
export const pathTypeToString = (p: PathType): string => p
export const pathConcat = (p: Path, s: string): Path =>
  p === '/' ? stringToPath('/' + s) : stringToPath(pathToString(p) + '/' + s)
export const pathIsNonTeamTLFList = (p: Path): boolean => {
  const str = pathToString(p)
  return str === '/keybase/private' || str === '/keybase/public'
}
export const getPathDir = (p: Path): Path => pathToString(p).slice(0, pathToString(p).lastIndexOf('/'))

const localSep = isWindows ? '\\' : '/'

export const localPathConcat = (p: LocalPath, s: string): LocalPath => p + localSep + s
export const getLocalPathName = (p: LocalPath): string => p.split(localSep).pop()
export const getLocalPathDir = (p: LocalPath): string => p.slice(0, p.lastIndexOf(localSep))

type PathItemComparer = (a: PathItem, b: PathItem) => number
type PathItemLessThan = (a: PathItem, b: PathItem) => boolean

const _comparerFromLessThan = (lt: PathItemLessThan): PathItemComparer => (a, b) =>
  lt(a, b) ? -1 : lt(b, a) ? 1 : 0

const _neutralComparer = (a: PathItem, b: PathItem): number => 0

const _getMeFirstComparer = (meUsername: string): PathItemComparer =>
  _comparerFromLessThan((a: PathItem, b: PathItem): boolean => a.name === meUsername && b.name !== meUsername)

const _folderFirstComparer: PathItemComparer = _comparerFromLessThan(
  (a: PathItem, b: PathItem): boolean =>
    a.type === 'folder'
      ? b.type !== 'folder' || (!!a.tlfMeta && a.tlfMeta.isNew && !(b.tlfMeta && b.tlfMeta.isNew))
      : false
)

export const _getSortByComparer = (sortBy: SortBy): PathItemComparer => {
  switch (sortBy) {
    case 'name':
      return (a: PathItem, b: PathItem): number => a.name.localeCompare(b.name)
    case 'time':
      return (a: PathItem, b: PathItem): number =>
        b.lastModifiedTimestamp - a.lastModifiedTimestamp || a.name.localeCompare(b.name)
    default:
      throw new Error('invalid SortBy: ' + sortBy)
  }
}

export const sortSettingToCompareFunction = (
  {sortBy, sortOrder}: SortSetting,
  meUsername?: string
): PathItemComparer => {
  const meFirstComparer = meUsername ? _getMeFirstComparer(meUsername) : _neutralComparer
  const sortByComparer = _getSortByComparer(sortBy)
  const multiplier = sortOrder === 'desc' ? -1 : 1
  return (a: PathItem, b: PathItem): number =>
    multiplier * (meFirstComparer(a, b) || _folderFirstComparer(a, b) || sortByComparer(a, b))
}
type sortSettingDisplayParams = {
  sortSettingText: string,
  sortSettingIconType: IconType,
}

export const sortSettingToIconTypeAndText = (s: _SortSetting): sortSettingDisplayParams => {
  switch (s.sortBy) {
    case 'name':
      return s.sortOrder === 'asc'
        ? {
            sortSettingIconType: 'iconfont-arrow-full-down',
            sortSettingText: 'Name ascending',
          }
        : {
            sortSettingIconType: 'iconfont-arrow-full-up',
            sortSettingText: 'Name descending',
          }
    case 'time':
      return s.sortOrder === 'asc'
        ? {
            sortSettingIconType: 'iconfont-time',
            sortSettingText: 'Recent first',
          }
        : {
            sortSettingIconType: 'iconfont-time-reversed',
            sortSettingText: 'Older first',
          }
    default:
      throw new Error('invalid SortBy')
  }
}

export type PathItemIconSpec =
  | {
      type: 'teamAvatar',
      teamName: string,
    }
  | {
      type: 'avatar',
      username: string,
    }
  | {
      type: 'avatars',
      usernames: Array<string>,
    }
  | {
      type: 'basic',
      iconType: IconType,
      iconColor: string,
    }

export type ItemStyles = {
  iconSpec: PathItemIconSpec,
  textColor: string,
  textType: TextType,
}

export type FolderRPCWithMeta = {
  name: string,
  folderType: RPCTypes.FolderType,
  isIgnored: boolean,
  isNew: boolean,
  needsRekey: boolean,
  waitingForParticipantUnlock?: Array<ParticipantUnlock>,
  youCanUnlock?: Array<Device>,
}

export type FavoriteFolder = {
  name: string,
  private: boolean,
  folderType: RPCTypes.FolderType,
  problem_set?: {
    // Map of UID to a list of KIDs, for this folder
    solution_kids: {[string]: Array<string>},
    can_self_help: boolean,
  },
}

export type MediaType = 'image' | 'video' | 'audio'

// export type FileType = MediaType | 'text' | 'unknown'
export type FileType = 'text' | 'unknown'

// TODO: integrate with mime types after jzila's PR is merged.
export const inferFileTypeFromName = (name: string): FileType => {
  const lower = name.toLowerCase()
  if (txtExts.some(ext => lower.endsWith(ext))) {
    return 'text'
  }
  return 'unknown'
}

// This list is produced from github.com/github/linguist with MIT license.
const txtExts = [
  '.bsl',
  '.os',
  '.abap',
  '.abnf',
  '.asc',
  '.ash',
  '.ampl',
  '.mod',
  '.g4',
  '.apib',
  '.apl',
  '.dyalog',
  '.asn',
  '.asn1',
  '.asp',
  '.asax',
  '.ascx',
  '.ashx',
  '.asmx',
  '.aspx',
  '.axd',
  '.dats',
  '.hats',
  '.sats',
  '.as',
  '.adb',
  '.ada',
  '.ads',
  '.afm',
  '.agda',
  '.als',
  'null',
  '.as',
  '.angelscript',
  'null',
  '.apacheconf',
  '.vhost',
  '.cls',
  '.agc',
  '.applescript',
  '.scpt',
  '.arc',
  '.asciidoc',
  '.adoc',
  '.asc',
  '.aj',
  '.asm',
  '.a51',
  '.inc',
  '.nasm',
  '.aug',
  '.ahk',
  '.ahkl',
  '.au3',
  '.awk',
  '.auk',
  '.gawk',
  '.mawk',
  '.nawk',
  '.bal',
  '.bat',
  '.cmd',
  '.befunge',
  '.bison',
  '.bb',
  '.blade',
  '.blade.php',
  '.bb',
  '.decls',
  '.bmx',
  '.bsv',
  '.boo',
  '.b',
  '.bf',
  '.brs',
  '.bro',
  '.c',
  '.cats',
  '.h',
  '.idc',
  '.cs',
  '.cake',
  '.cshtml',
  '.csx',
  '.cpp',
  '.c++',
  '.cc',
  '.cp',
  '.cxx',
  '.h',
  '.h++',
  '.hh',
  '.hpp',
  '.hxx',
  '.inc',
  '.inl',
  '.ino',
  '.ipp',
  '.re',
  '.tcc',
  '.tpp',
  '.cobjdump',
  '.chs',
  '.clp',
  '.cmake',
  '.cmake.in',
  '.cob',
  '.cbl',
  '.ccp',
  '.cobol',
  '.cpy',
  '.dae',
  '.cson',
  '.css',
  '.csv',
  '.w',
  '.capnp',
  '.mss',
  '.ceylon',
  '.chpl',
  '.ch',
  '.ck',
  '.cirru',
  '.clw',
  '.icl',
  '.dcl',
  '.click',
  '.clj',
  '.boot',
  '.cl2',
  '.cljc',
  '.cljs',
  '.cljs.hl',
  '.cljscm',
  '.cljx',
  '.hic',
  '.soy',
  '.conllu',
  '.conll',
  '.coffee',
  '._coffee',
  '.cake',
  '.cjsx',
  '.iced',
  '.cfm',
  '.cfml',
  '.cfc',
  '.lisp',
  '.asd',
  '.cl',
  '.l',
  '.lsp',
  '.ny',
  '.podsl',
  '.sexp',
  '.cwl',
  '.cp',
  '.cps',
  '.cl',
  '.coq',
  '.v',
  '.cppobjdump',
  '.c++objdump',
  '.c++objdump',
  '.cppobjdump',
  '.cxxobjdump',
  '.creole',
  '.cr',
  '.orc',
  '.udo',
  '.csd',
  '.sco',
  '.cu',
  '.cuh',
  '.cy',
  '.pyx',
  '.pxd',
  '.pxi',
  '.d',
  '.di',
  '.dobjdump',
  '.com',
  '.dm',
  '.zone',
  '.arpa',
  '.d',
  '.darcspatch',
  '.dpatch',
  '.dart',
  '.dwl',
  '.diff',
  '.patch',
  '.dockerfile',
  '.djs',
  '.dylan',
  '.dyl',
  '.intr',
  '.lid',
  '.E',
  '.ebnf',
  '.ecl',
  '.eclxml',
  '.ecl',
  '.ejs',
  '.eq',
  '.sch',
  '.brd',
  '.eb',
  '.epj',
  '.edc',
  '.e',
  '.ex',
  '.exs',
  '.elm',
  '.el',
  '.emacs',
  '.emacs.desktop',
  '.em',
  '.emberscript',
  '.erl',
  '.app.src',
  '.es',
  '.escript',
  '.hrl',
  '.xrl',
  '.yrl',
  '.fs',
  '.fsi',
  '.fsx',
  '.fx',
  '.flux',
  '.factor',
  '.fy',
  '.fancypack',
  '.fan',
  '.f',
  '.fs',
  '.for',
  '.eam.fs',
  '.fth',
  '.4th',
  '.f',
  '.for',
  '.forth',
  '.fr',
  '.frt',
  '.fs',
  '.f90',
  '.f',
  '.f03',
  '.f08',
  '.f77',
  '.f95',
  '.for',
  '.fpp',
  '.ftl',
  '.fr',
  '.g',
  '.gco',
  '.gcode',
  '.gms',
  '.g',
  '.gap',
  '.gd',
  '.gi',
  '.tst',
  '.md',
  '.gdb',
  '.gdbinit',
  '.gd',
  '.glsl',
  '.fp',
  '.frag',
  '.frg',
  '.fs',
  '.fsh',
  '.fshader',
  '.geo',
  '.geom',
  '.glslv',
  '.gshader',
  '.shader',
  '.tesc',
  '.tese',
  '.vert',
  '.vrx',
  '.vsh',
  '.vshader',
  '.gn',
  '.gni',
  '.gml',
  '.gs',
  '.kid',
  '.ebuild',
  '.eclass',
  '.gbr',
  '.gbl',
  '.gbo',
  '.gbp',
  '.gbs',
  '.gko',
  '.gpb',
  '.gpt',
  '.gtl',
  '.gto',
  '.gtp',
  '.gts',
  '.po',
  '.pot',
  '.feature',
  '.glf',
  '.gp',
  '.gnu',
  '.gnuplot',
  '.plot',
  '.plt',
  '.go',
  '.golo',
  '.gs',
  '.gst',
  '.gsx',
  '.vark',
  '.grace',
  '.gradle',
  '.gf',
  '.gml',
  '.graphql',
  '.gql',
  '.dot',
  '.gv',
  '.groovy',
  '.grt',
  '.gtpl',
  '.gvy',
  '.gsp',
  '.hcl',
  '.tf',
  '.tfvars',
  '.hlsl',
  '.cginc',
  '.fx',
  '.fxh',
  '.hlsli',
  '.html',
  '.htm',
  '.html.hl',
  '.inc',
  '.st',
  '.xht',
  '.xhtml',
  '.jinja',
  '.jinja2',
  '.mustache',
  '.njk',
  '.ecr',
  '.eex',
  '.erb',
  '.erb.deface',
  '.phtml',
  '.http',
  '.hxml',
  '.hh',
  '.php',
  '.haml',
  '.haml.deface',
  '.handlebars',
  '.hbs',
  '.hb',
  '.hs',
  '.hsc',
  '.hx',
  '.hxsl',
  '.hy',
  '.bf',
  '.pro',
  '.dlm',
  '.ipf',
  '.ini',
  '.cfg',
  '.prefs',
  '.pro',
  '.properties',
  '.irclog',
  '.weechatlog',
  '.idr',
  '.lidr',
  '.ni',
  '.i7x',
  '.iss',
  '.io',
  '.ik',
  '.thy',
  'null',
  '.ijs',
  '.flex',
  '.jflex',
  '.json',
  '.avsc',
  '.geojson',
  '.gltf',
  '.JSONtmLanguage',
  '.jsonl',
  '.tfstate',
  '.tfstate.backup',
  '.topojson',
  '.webapp',
  '.webmanifest',
  '.json5',
  '.jsonld',
  '.jq',
  '.jsx',
  '.j',
  '.java',
  '.jsp',
  '.js',
  '._js',
  '.bones',
  '.es',
  '.es6',
  '.frag',
  '.gs',
  '.jake',
  '.jsb',
  '.jscad',
  '.jsfl',
  '.jsm',
  '.jss',
  '.mjs',
  '.njs',
  '.pac',
  '.sjs',
  '.ssjs',
  '.xsjs',
  '.xsjslib',
  '.jison',
  '.jisonlex',
  '.ol',
  '.iol',
  '.jl',
  '.ipynb',
  '.krl',
  '.kicad_pcb',
  '.kicad_mod',
  '.kicad_wks',
  '.brd',
  '.sch',
  '.kit',
  '.kt',
  '.ktm',
  '.kts',
  '.lfe',
  '.ll',
  '.lol',
  '.lsl',
  '.lslp',
  '.lvproj',
  '.lasso',
  '.las',
  '.lasso8',
  '.lasso9',
  '.ldml',
  '.latte',
  '.lean',
  '.hlean',
  '.less',
  '.l',
  '.lex',
  '.ly',
  '.ily',
  '.b',
  '.m',
  '.ld',
  '.lds',
  '.x',
  '.mod',
  '.liquid',
  '.lagda',
  '.litcoffee',
  '.lhs',
  '.ls',
  '._ls',
  '.xm',
  '.x',
  '.xi',
  '.lgt',
  '.logtalk',
  '.lookml',
  '.model.lkml',
  '.view.lkml',
  '.ls',
  '.lua',
  '.fcgi',
  '.nse',
  '.p8',
  '.pd_lua',
  '.rbxs',
  '.wlua',
  '.mumps',
  '.m',
  '.m4',
  '.m4',
  '.ms',
  '.mcr',
  '.mq4',
  '.mqh',
  '.mq5',
  '.mqh',
  '.mtml',
  '.muf',
  '.m',
  '.mak',
  '.d',
  '.make',
  '.mk',
  '.mkfile',
  '.mako',
  '.mao',
  '.md',
  '.markdown',
  '.mdown',
  '.mdwn',
  '.mkd',
  '.mkdn',
  '.mkdown',
  '.ron',
  '.workbook',
  '.marko',
  '.mask',
  '.mathematica',
  '.cdf',
  '.m',
  '.ma',
  '.mt',
  '.nb',
  '.nbp',
  '.wl',
  '.wlt',
  '.matlab',
  '.m',
  'null',
  '.maxpat',
  '.maxhelp',
  '.maxproj',
  '.mxt',
  '.pat',
  '.mediawiki',
  '.wiki',
  '.m',
  '.moo',
  'null',
  '.metal',
  '.minid',
  '.druby',
  '.duby',
  '.mir',
  '.mirah',
  '.mo',
  '.mod',
  '.mms',
  '.mmk',
  '.monkey',
  '.monkey2',
  '.moo',
  '.moon',
  '.myt',
  '.ncl',
  '.nl',
  '.nsi',
  '.nsh',
  '.ne',
  '.nearley',
  '.n',
  '.axs',
  '.axi',
  '.axs.erb',
  '.axi.erb',
  '.nlogo',
  '.nl',
  '.lisp',
  '.lsp',
  '.nf',
  '.nginxconf',
  '.vhost',
  '.nim',
  '.nimrod',
  '.ninja',
  '.nit',
  '.nix',
  '.nu',
  '.numpy',
  '.numpyw',
  '.numsc',
  '.ml',
  '.eliom',
  '.eliomi',
  '.ml4',
  '.mli',
  '.mll',
  '.mly',
  '.objdump',
  '.m',
  '.h',
  '.mm',
  '.j',
  '.sj',
  '.omgrofl',
  '.opa',
  '.opal',
  '.cl',
  '.opencl',
  '.p',
  '.cls',
  '.w',
  'null',
  '.scad',
  '.fea',
  '.org',
  '.ox',
  '.oxh',
  '.oxo',
  '.oxygene',
  '.oz',
  '.p4',
  '.pwn',
  '.inc',
  '.php',
  '.aw',
  '.ctp',
  '.fcgi',
  '.inc',
  '.php3',
  '.php4',
  '.php5',
  '.phps',
  '.phpt',
  '.pls',
  '.bdy',
  '.ddl',
  '.fnc',
  '.pck',
  '.pkb',
  '.pks',
  '.plb',
  '.plsql',
  '.prc',
  '.spc',
  '.sql',
  '.tpb',
  '.tps',
  '.trg',
  '.vw',
  '.sql',
  '.pov',
  '.inc',
  '.pan',
  '.psc',
  '.parrot',
  '.pasm',
  '.pir',
  '.pas',
  '.dfm',
  '.dpr',
  '.inc',
  '.lpr',
  '.pascal',
  '.pp',
  '.pep',
  '.pl',
  '.al',
  '.cgi',
  '.fcgi',
  '.perl',
  '.ph',
  '.plx',
  '.pm',
  '.psgi',
  '.t',
  '.6pl',
  '.6pm',
  '.nqp',
  '.p6',
  '.p6l',
  '.p6m',
  '.pl',
  '.pl6',
  '.pm',
  '.pm6',
  '.t',
  '.pic',
  '.chem',
  '.pkl',
  '.l',
  '.pig',
  '.pike',
  '.pmod',
  '.pod',
  '.pogo',
  '.pony',
  '.pcss',
  '.ps',
  '.eps',
  '.pfa',
  '.pbt',
  '.sra',
  '.sru',
  '.srw',
  '.ps1',
  '.psd1',
  '.psm1',
  '.pde',
  '.pl',
  '.pro',
  '.prolog',
  '.yap',
  '.spin',
  '.proto',
  '.asc',
  '.pub',
  '.jade',
  '.pug',
  '.pp',
  '.pd',
  '.pb',
  '.pbi',
  '.purs',
  '.py',
  '.bzl',
  '.cgi',
  '.fcgi',
  '.gyp',
  '.gypi',
  '.lmi',
  '.py3',
  '.pyde',
  '.pyi',
  '.pyp',
  '.pyt',
  '.pyw',
  '.rpy',
  '.spec',
  '.tac',
  '.wsgi',
  '.xpy',
  'null',
  '.pytb',
  '.qml',
  '.qbs',
  '.pro',
  '.pri',
  '.r',
  '.rd',
  '.rsx',
  '.raml',
  '.rdoc',
  '.rbbas',
  '.rbfrm',
  '.rbmnu',
  '.rbres',
  '.rbtbar',
  '.rbuistate',
  '.rexx',
  '.pprx',
  '.rex',
  '.rhtml',
  '.rmd',
  '.x',
  '.spec',
  '.rnh',
  '.rno',
  '.rkt',
  '.rktd',
  '.rktl',
  '.scrbl',
  '.rl',
  '.rsc',
  '.raw',
  '.re',
  '.rei',
  '.reb',
  '.r',
  '.r2',
  '.r3',
  '.rebol',
  '.red',
  '.reds',
  '.cw',
  '.regexp',
  '.regex',
  '.rpy',
  '.rs',
  '.rsh',
  '.ring',
  '.robot',
  '.man',
  '.1in',
  '.1m',
  '.1x',
  '.3in',
  '.3m',
  '.3qt',
  '.3x',
  '.l',
  '.me',
  '.ms',
  '.n',
  '.nr',
  '.rno',
  '.roff',
  '.tmac',
  '.rg',
  '.rb',
  '.builder',
  '.eye',
  '.fcgi',
  '.gemspec',
  '.god',
  '.jbuilder',
  '.mspec',
  '.pluginspec',
  '.podspec',
  '.rabl',
  '.rake',
  '.rbuild',
  '.rbw',
  '.rbx',
  '.ru',
  '.ruby',
  '.spec',
  '.thor',
  '.watchr',
  '.rs',
  '.rs.in',
  '.sas',
  '.scss',
  '.smt2',
  '.smt',
  '.sparql',
  '.rq',
  '.sqf',
  '.hqf',
  '.sql',
  '.cql',
  '.ddl',
  '.inc',
  '.mysql',
  '.prc',
  '.tab',
  '.udf',
  '.viw',
  '.sql',
  '.db2',
  '.srt',
  '.ston',
  '.svg',
  '.sage',
  '.sagews',
  '.sls',
  '.sass',
  '.scala',
  '.kojo',
  '.sbt',
  '.sc',
  '.scaml',
  '.scm',
  '.sch',
  '.sld',
  '.sls',
  '.sps',
  '.ss',
  '.sci',
  '.sce',
  '.tst',
  '.self',
  '.shader',
  '.sh',
  '.bash',
  '.bats',
  '.cgi',
  '.command',
  '.fcgi',
  '.ksh',
  '.sh.in',
  '.tmux',
  '.tool',
  '.zsh',
  '.shsession',
  '.shen',
  '.sl',
  '.slim',
  '.smali',
  '.st',
  '.cs',
  '.tpl',
  'null',
  '.sp',
  '.inc',
  '.sma',
  '.sfd',
  '.nut',
  '.stan',
  '.ML',
  '.fun',
  '.sig',
  '.sml',
  '.do',
  '.ado',
  '.doh',
  '.ihlp',
  '.mata',
  '.matah',
  '.sthlp',
  '.styl',
  '.srt',
  '.sublimebuild',
  '.sublimecommands',
  '.sublimecompletions',
  '.sublimekeymap',
  '.sublimemacro',
  '.sublimemenu',
  '.sublimemousemap',
  '.sublimeproject',
  '.sublimesettings',
  '.sublimetheme',
  '.sublimeworkspace',
  '.sublime_metrics',
  '.sublime_session',
  '.sss',
  '.sc',
  '.scd',
  '.swift',
  '.sv',
  '.svh',
  '.vh',
  '.8xp',
  '.8xk',
  '.8xk.txt',
  '.8xp.txt',
  '.tla',
  '.toml',
  '.txl',
  '.tcl',
  '.adp',
  '.tm',
  '.tcsh',
  '.csh',
  '.tex',
  '.aux',
  '.bbx',
  '.bib',
  '.cbx',
  '.cls',
  '.dtx',
  '.ins',
  '.lbx',
  '.ltx',
  '.mkii',
  '.mkiv',
  '.mkvi',
  '.sty',
  '.toc',
  '.tea',
  '.t',
  '.txt',
  '.fr',
  '.nb',
  '.ncl',
  '.no',
  '.textile',
  '.thrift',
  '.t',
  '.tu',
  '.ttl',
  '.twig',
  '.tl',
  '.ts',
  '.tsx',
  '.upc',
  '.anim',
  '.asset',
  '.mat',
  '.meta',
  '.prefab',
  '.unity',
  '.s',
  '.ms',
  '.uno',
  '.uc',
  '.ur',
  '.urs',
  '.vcl',
  '.vhdl',
  '.vhd',
  '.vhf',
  '.vhi',
  '.vho',
  '.vhs',
  '.vht',
  '.vhw',
  '.vala',
  '.vapi',
  '.v',
  '.veo',
  '.vim',
  '.vb',
  '.bas',
  '.cls',
  '.frm',
  '.frx',
  '.vba',
  '.vbhtml',
  '.vbs',
  '.volt',
  '.vue',
  '.mtl',
  '.obj',
  '.owl',
  '.wast',
  '.wat',
  '.webidl',
  '.toc',
  '.x10',
  '.xc',
  'null',
  '.xml',
  '.adml',
  '.admx',
  '.ant',
  '.axml',
  '.builds',
  '.ccproj',
  '.ccxml',
  '.clixml',
  '.cproject',
  '.cscfg',
  '.csdef',
  '.csl',
  '.csproj',
  '.ct',
  '.depproj',
  '.dita',
  '.ditamap',
  '.ditaval',
  '.dll.config',
  '.dotsettings',
  '.filters',
  '.fsproj',
  '.fxml',
  '.glade',
  '.gml',
  '.grxml',
  '.iml',
  '.ivy',
  '.jelly',
  '.jsproj',
  '.kml',
  '.launch',
  '.mdpolicy',
  '.mjml',
  '.mm',
  '.mod',
  '.mxml',
  '.natvis',
  '.ndproj',
  '.nproj',
  '.nuspec',
  '.odd',
  '.osm',
  '.pkgproj',
  '.plist',
  '.pluginspec',
  '.proj',
  '.props',
  '.ps1xml',
  '.psc1',
  '.pt',
  '.rdf',
  '.resx',
  '.rss',
  '.sch',
  '.scxml',
  '.sfproj',
  '.shproj',
  '.srdf',
  '.storyboard',
  '.stTheme',
  '.sublimesnippet',
  '.targets',
  '.tmCommand',
  '.tml',
  '.tmLanguage',
  '.tmPreferences',
  '.tmSnippet',
  '.tmTheme',
  '.ts',
  '.tsx',
  '.ui',
  '.urdf',
  '.ux',
  '.vbproj',
  '.vcxproj',
  '.vsixmanifest',
  '.vssettings',
  '.vstemplate',
  '.vxml',
  '.wixproj',
  '.wsdl',
  '.wsf',
  '.wxi',
  '.wxl',
  '.wxs',
  '.x3d',
  '.xacro',
  '.xaml',
  '.xib',
  '.xlf',
  '.xliff',
  '.xmi',
  '.xml.dist',
  '.xproj',
  '.xsd',
  '.xspec',
  '.xul',
  '.zcml',
  '.xpm',
  '.pm',
  '.xspconfig',
  '.xsp.metadata',
  '.xpl',
  '.xproc',
  '.xquery',
  '.xq',
  '.xql',
  '.xqm',
  '.xqy',
  '.xs',
  '.xslt',
  '.xsl',
  '.xojo_code',
  '.xojo_menu',
  '.xojo_report',
  '.xojo_script',
  '.xojo_toolbar',
  '.xojo_window',
  '.xtend',
  '.yml',
  '.reek',
  '.rviz',
  '.sublimesyntax',
  '.syntax',
  '.yaml',
  '.yamltmlanguage',
  '.yml.mysql',
  '.yang',
  '.yar',
  '.yara',
  '.y',
  '.yacc',
  '.yy',
  '.zep',
  '.zimpl',
  '.zmpl',
  '.zpl',
  '.desktop',
  '.desktop.in',
  '.ec',
  '.eh',
  '.edn',
  '.fish',
  '.mu',
  '.nc',
  '.ooc',
  '.rst',
  '.rest',
  '.rest.txt',
  '.rst.txt',
  '.sed',
  '.wdl',
  '.wisp',
  '.prg',
  '.ch',
  '.prw',
]
