// @flow
import type {TypedActions} from '../actions/typed-actions-gen'
import type {TypedState} from '../constants/reducer'
import type {ComponentType} from 'react'

declare type MapStateToProps<A, B> = (state: TypedState, ownProps: A) => B

declare type MapDispatchToProps<A, B> = (dispatch: (action: TypedActions) => void, ownProps: A) => B

declare type MergeProps<A, B, C, D> = (stateProps: A, dispatchProps: B, ownProps: C) => D

declare export default function connect<RMP, Com: ComponentType<RMP>, DP, SP: TypedState, RSP, RDP, MP, OP>(
  mapStateToProps: MapStateToProps<OP, RSP>,
  mapDispatchToProps: MapDispatchToProps<OP, RDP>,
  mergeProps: MergeProps<RSP, RDP, OP, RMP>
): (component: Com) => ComponentType<OP>

// eslint-disable-next-line no-redeclare
declare export default function connect<
  Com: ComponentType<RSP & RDP & OP>,
  DP,
  SP: TypedState,
  RSP,
  RDP,
  MP,
  OP
>(
  mapStateToProps: MapStateToProps<OP, RSP>,
  mapDispatchToProps: MapDispatchToProps<OP, RDP>
): (component: Com) => ComponentType<OP>
